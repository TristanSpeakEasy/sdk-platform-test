arazzo: 1.0.0
info:
  title: Test Suite
  summary: Migrated from .speakeasy/tests.yaml
  version: 0.0.1
sourceDescriptions:
  - name: ./tests/specs/review.yaml
    url: https://TBD.com
    type: openapi
workflows:
  - workflowId: testEndpoint
    steps:
      - stepId: test
        operationId: testEndpoint
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK
  - workflowId: getUser-testWithStatusCodeOnly
    steps:
      - stepId: test
        operationId: getUser
        parameters:
          - name: id
            in: path
            value: test123
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK
  - workflowId: getUser-testWithResponseBody
    steps:
      - stepId: test
        operationId: getUser
        parameters:
          - name: id
            in: path
            value: test123
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "test123",
                "email": "Trystan_Crooks@hotmail.com",
                "first_name": "Trystan",
                "last_name": "Crooks",
                "age": 32,
                "postal_code": 94110,
                "metadata": {
                  "allergies": "none",
                  "color": "red",
                  "height": 182,
                  "weight": 77,
                  "is_smoking": true
                }
              }
            type: simple
    x-speakeasy-test-group: SDK
  - workflowId: getUser-testWithResponseBodyFields
    steps:
      - stepId: test
        operationId: getUser
        parameters:
          - name: id
            in: path
            value: test123
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body#/metadata/allergies
            condition: "none"
            type: simple
          - context: $response.body#/metadata/color
            condition: "red"
            type: simple
          - context: $response.body#/associatedIds/1
            condition: "test123"
            type: simple
  - workflowId: getFullyFlattenedRequest-namedExampleThatIsntMatchedAcrossDifferentExamples
    steps:
      - stepId: test
        operationId: getFullyFlattenedRequest
        parameters:
          - name: lang
            in: query
            value: en
        requestBody:
          contentType: application/json
          payload:
            name: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-server:
      baseUrl: "x-env: TEST_URL"
    x-speakeasy-test-group: SDK
  - workflowId: postTest2
    steps:
      - stepId: test
        operationId: postTest2
        parameters:
          - name: deprecatedQueryParam1
            in: query
            value: some example query param
          - name: deprecatedQueryParam2
            in: query
            value: some example query param
        requestBody:
          contentType: application/json
          payload:
            obj:
              any:
                str: example
              anything: <value>
              arr:
                - str: example
              bigint: 370331
              bigintStr: "12345678901234567890"
              bool: true
              boolOpt: true
              color: green
              date: "2024-10-11"
              dateTime: "2020-01-01T00:00:00Z"
              decimal: 3.141592653589
              decimalStr: "4105.06"
              enumProp: First
              float32: "4344.96"
              heroWidth: 480
              icon: tick
              int: 999999
              int32: 1
              int32Enum: 69
              intEnum: 3
              intOptNull: 999999
              map: {}
              nullableIntEnum: 3
              nullableStringEnum: First
              num: 1.1
              numOptNull: 1.1
              obj:
                str: example
              str: example
              type: "0"
            type: type1
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == multipart/form-data
          - context: $response.body
            condition: |
              "0xF8A3C7f2FD"
            type: simple
    x-speakeasy-test-group: tag2
  - workflowId: postFile
    steps:
      - stepId: test
        operationId: postFile
        requestBody:
          contentType: multipart/form-data
          payload:
            file: "x-file: postfiletest.txt"
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/octet-stream
          - context: $response.body
            condition: |
              "0x8fBAEeAAE7"
            type: simple
    x-speakeasy-test-group: SDK
    x-speakeasy-test-targets: ["go", "python", "pythonv2", "typescriptv2"]
  - workflowId: getPolymorphism
    steps:
      - stepId: test
        operationId: getPolymorphism
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "oneOfWithUnionDescription": {
                  "str": "example",
                  "bool": true,
                  "int": 999999,
                  "int32": 1,
                  "num": 1.1,
                  "float32": "7754.37",
                  "enumProp": "First",
                  "date": "2022-04-06",
                  "dateTime": "2020-01-01T00:00:00Z",
                  "anything": "\u003cvalue\u003e",
                  "boolOpt": true,
                  "intOptNull": 999999,
                  "numOptNull": 1.1,
                  "intEnum": 3,
                  "int32Enum": 69,
                  "bigint": 815677,
                  "decimalStr": "7753.11",
                  "obj": {
                    "str": "example"
                  },
                  "map": {},
                  "arr": [
                    {
                      "str": "example"
                    },
                    {
                      "str": "example"
                    },
                    {
                      "str": "example"
                    }
                  ],
                  "any": "\u003cvalue\u003e",
                  "nullableIntEnum": 3,
                  "nullableStringEnum": "First",
                  "color": "green",
                  "icon": "tick",
                  "heroWidth": 480
                },
                "oneOfWithFactoredOutProperties": {
                  "str": "example",
                  "anExtraProperty": "example"
                },
                "simpleAllOf": {
                  "str": "example",
                  "bool": true
                },
                "allOfWithFactoredOutProperties": {
                  "anOverridingProperty": "example",
                  "anotherProperty": "example",
                  "anExtraProperty": "example"
                }
              }
            type: simple
    x-speakeasy-test-group: SDK
  - workflowId: getUnionErrors
    steps:
      - stepId: test
        operationId: getUnionErrors
        parameters:
          - name: page
            in: query
            value: 12
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "pages": []
              }
            type: simple
    x-speakeasy-test-group: SDK
  - workflowId: getRequestBodyFlattenedAway
    steps:
      - stepId: test
        operationId: getRequestBodyFlattenedAway
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK
  - workflowId: getUser
    steps:
      - stepId: test
        operationId: getUser
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "\u003cid\u003e",
                "email": "Trystan_Crooks@hotmail.com"
              }
            type: simple
    x-speakeasy-test-group: SDK
  - workflowId: chat
    steps:
      - stepId: test
        operationId: chat
        requestBody:
          contentType: application/json
          payload:
            prompt: What is the largest city in the world?
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: SDK
  - workflowId: getBinaryDefaultResponse
    steps:
      - stepId: test
        operationId: getBinaryDefaultResponse
        successCriteria:
          - condition: $statusCode == default
          - condition: $response.header.Content-Type == application/octet-stream
          - context: $response.body
            condition: |
              "0xf58AcDF799"
            type: simple
    x-speakeasy-test-group: SDK
    x-speakeasy-test-targets: ["go", "python", "pythonv2", "typescriptv2"]
  - workflowId: deprecated1
    steps:
      - stepId: test
        operationId: deprecated1
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: tag1
  - workflowId: listTest1
    steps:
      - stepId: test
        operationId: listTest1
        parameters:
          - name: page
            in: path
            value: 100
          - name: queryParam1
            in: query
            value: some example query param
          - name: queryParam2
            in: query
            value: 1
          - name: headerParam1
            in: header
            value: some example header param
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "resultArray": [
                  {
                    "test1": "some example response"
                  }
                ],
                "totalCount": 100,
                "type": "First"
              }
            type: simple
        x-speakeasy-test-security:
          value:
            apiKey: "some-api-key"
    x-speakeasy-test-group: tag1
  - workflowId: user-lifecycle
    steps:
      - stepId: create
        operationId: createUser
        requestBody:
          contentType: application/json
          payload: {"email": "Trystan_Crooks@hotmail.com", "first_name": "Trystan", "last_name": "Crooks", "age": 32, "postal_code": 94110, "metadata": {"allergies": "none", "color": "red", "height": 182, "weight": 77, "is_smoking": true}}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - condition: $response.body#/email == Trystan_Crooks@hotmail.com
          - condition: $response.body#/postal_code == 94110
        outputs:
          id: $response.body#/id
      - stepId: get
        operationId: getUser
        parameters:
          - name: id
            in: path
            value: $steps.create.outputs.id
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - condition: $response.body#/email == Trystan_Crooks@hotmail.com
          - condition: $response.body#/first_name == Trystan
          - condition: $response.body#/last_name == Crooks
          - condition: $response.body#/age == 32
          - condition: $response.body#/postal_code == 94110
        outputs:
          user: $response.body
          age: $response.body#/age
      - stepId: update
        operationId: updateUser
        parameters:
          - name: id
            in: path
            value: $steps.create.outputs.id
        requestBody:
          contentType: application/json
          payload: $steps.get.outputs.user
          replacements:
            - target: /postal_code
              value: 94107
            - target: /age
              value: $steps.get.outputs.age
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - condition: $response.body#/email == Trystan_Crooks@hotmail.com
          - condition: $response.body#/first_name == Trystan
          - condition: $response.body#/last_name == Crooks
          - condition: $response.body#/age == 32
          - condition: $response.body#/postal_code == 94107
        outputs:
          email: $response.body#/email
          first_name: $response.body#/first_name
          last_name: $response.body#/last_name
          metadata: $response.body#/metadata
      - stepId: updateAgain
        operationId: updateUser
        parameters:
          - name: id
            in: path
            value: $steps.create.outputs.id
        requestBody:
          contentType: application/json
          payload: {"id": "$steps.create.outputs.id", "email": "$steps.update.email", "first_name": "$steps.update.first_name", "last_name": "$steps.update.last_name", "age": 33, "postal_code": 94110, "metadata": "$steps.update.metadata"}
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - condition: $response.body#/email == Trystan_Crooks@hotmail.com
          - condition: $response.body#/first_name == Trystan
          - condition: $response.body#/last_name == Crooks
          - condition: $response.body#/age == 33
          - condition: $response.body#/postal_code == 94110
      - stepId: delete
        operationId: deleteUser
        parameters:
          - name: id
            in: path
            value: $steps.create.outputs.id
        successCriteria:
          - condition: $statusCode == 200
