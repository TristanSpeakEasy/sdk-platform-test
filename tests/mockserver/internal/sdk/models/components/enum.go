// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type Enum string

const (
	EnumFirst  Enum = "First"
	EnumSecond Enum = "Second"
	EnumThirdA Enum = "Ex-aequo"
	EnumThirdB Enum = "Ex.aequo"
)

func (e Enum) ToPointer() *Enum {
	return &e
}
func (e *Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "First":
		fallthrough
	case "Second":
		fallthrough
	case "Ex-aequo":
		fallthrough
	case "Ex.aequo":
		*e = Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Enum: %v", v)
	}
}
