// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/types/stream"
)

type ChatRequestBody struct {
	Prompt *string `json:"prompt,omitempty"`
}

func (o *ChatRequestBody) GetPrompt() *string {
	if o == nil {
		return nil
	}
	return o.Prompt
}

type Data struct {
	Content *string `json:"content,omitempty"`
}

func (o *Data) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

// ChatChatStream - A stream containing chat completion tokens
type ChatChatStream struct {
	Data Data `json:"data"`
}

func (o *ChatChatStream) GetData() Data {
	if o == nil {
		return Data{}
	}
	return o.Data
}

func (o ChatChatStream) GetEventEncoding(event string) (string, error) {
	return "application/json", nil
}

type ChatResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A stream containing chat completion tokens
	ChatStream *stream.EventStream[ChatChatStream]
}

func (o *ChatResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ChatResponse) GetChatStream() *stream.EventStream[ChatChatStream] {
	if o == nil {
		return nil
	}
	return o.ChatStream
}
