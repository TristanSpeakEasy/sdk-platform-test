// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

type Tag string

const (
	TagTag1 Tag = "tag1"
)

func (e Tag) ToPointer() *Tag {
	return &e
}
func (e *Tag) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tag1":
		*e = Tag(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Tag: %v", v)
	}
}

type TaggedError1 struct {
	Tag      Tag                     `json:"tag"`
	Error_   string                  `json:"error"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &TaggedError1{}

func (e *TaggedError1) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
