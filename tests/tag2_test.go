// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	sdkplatformtest "github.com/tristanspeakeasy/sdk-platform-test"
	"github.com/tristanspeakeasy/sdk-platform-test/internal/utils"
	"github.com/tristanspeakeasy/sdk-platform-test/models/components"
	"github.com/tristanspeakeasy/sdk-platform-test/models/operations"
	"github.com/tristanspeakeasy/sdk-platform-test/types"
	"math/big"
	"testing"
)

func TestTag2_PostTest2(t *testing.T) {
	ctx := context.Background()

	s := sdkplatformtest.New(
		sdkplatformtest.WithClient(createTestHTTPClient("postTest2")),
	)

	res, err := s.TestGroup.Tag2.PostTest(ctx, components.Test2Request{
		Obj: components.ExhaustiveObject{
			Str:        "example",
			Bool:       true,
			Integer:    999999,
			Int32:      1,
			Num:        1.1,
			Float32:    4344.96,
			EnumProp:   components.EnumFirst.ToPointer(),
			Date:       types.MustDateFromString("2024-10-11"),
			DateTime:   types.MustTimeFromString("2020-01-01T00:00:00Z"),
			Anything:   "<value>",
			BoolOpt:    sdkplatformtest.Bool(true),
			IntOptNull: sdkplatformtest.Int64(999999),
			NumOptNull: sdkplatformtest.Float64(1.1),
			IntEnum:    components.IntEnumThird.ToPointer(),
			Int32Enum:  components.Int32EnumSixtyNine,
			Bigint:     big.NewInt(370331),
			BigintStr:  types.MustNewBigIntFromString("12345678901234567890"),
			DecimalStr: types.MustNewDecimalFromString("4105.06"),
			Obj: components.SimpleObject{
				Str: "example",
			},
			Map: map[string]components.SimpleObject{},
			Arr: []components.SimpleObject{
				components.SimpleObject{
					Str: "example",
				},
			},
			Any: components.CreateAnySimpleObject(
				components.SimpleObject{
					Str: "example",
				},
			),
			Type:               sdkplatformtest.String("0"),
			NullableIntEnum:    components.NullableIntEnumThird.ToPointer(),
			NullableStringEnum: components.NullableStringEnumFirst,
			Color:              components.ColorGreen.ToPointer(),
			Icon:               components.IconTick,
			HeroWidth:          components.HeroWidthFourHundredAndEighty.ToPointer(),
		},
		Type: components.TypeSuperType1.ToPointer(),
	}, nil, sdkplatformtest.String("some example query param"), operations.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")))
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.Body)
	assert.Equal(t, []byte("0xF8A3C7f2FD"), res.Body)

}
